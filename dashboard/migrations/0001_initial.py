# Generated by Django 5.1.2 on 2024-11-13 09:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Display",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("display_name", models.CharField(max_length=50)),
                ("display_description", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_name", models.CharField(max_length=50, unique=True)),
                ("category_description", models.CharField(blank=True, max_length=200)),
                ("category_seo_title", models.CharField(blank=True, max_length=100)),
                ("category_seo_author", models.CharField(blank=True, max_length=50)),
                (
                    "category_seo_description",
                    models.CharField(blank=True, max_length=200),
                ),
                ("category_seo_keywords", models.CharField(blank=True, max_length=500)),
                (
                    "category_parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_code", models.CharField(max_length=7)),
                ("product_name", models.CharField(max_length=100)),
                ("product_manage_name", models.CharField(max_length=100)),
                ("product_description", models.CharField(max_length=200)),
                ("product_detail", models.CharField(max_length=2000)),
                ("product_keywords", models.CharField(max_length=500)),
                ("product_consumer_price", models.PositiveIntegerField()),
                ("product_sell_price", models.PositiveIntegerField()),
                ("product_supply_price", models.PositiveIntegerField()),
                (
                    "product_alternative_price",
                    models.CharField(blank=True, max_length=50),
                ),
                ("product_thumbnail_image", models.BinaryField()),
                ("product_seo_title", models.CharField(blank=True, max_length=100)),
                ("product_seo_author", models.CharField(blank=True, max_length=50)),
                (
                    "product_seo_description",
                    models.CharField(blank=True, max_length=200),
                ),
                ("product_seo_keywords", models.CharField(blank=True, max_length=500)),
                (
                    "product_category",
                    models.ManyToManyField(
                        related_name="product_category", to="dashboard.category"
                    ),
                ),
                (
                    "product_display",
                    models.ManyToManyField(
                        related_name="product_display", to="dashboard.display"
                    ),
                ),
                (
                    "product_optional_products",
                    models.ManyToManyField(
                        related_name="optional_product", to="dashboard.product"
                    ),
                ),
                (
                    "product_related_products",
                    models.ManyToManyField(
                        related_name="related_product", to="dashboard.product"
                    ),
                ),
            ],
        ),
    ]
